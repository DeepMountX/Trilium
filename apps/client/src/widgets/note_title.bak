import NoteContextAwareWidget from "./note_context_aware_widget.js";
import SpacedUpdate from "../services/spaced_update.js";
import appContext, { type EventData } from "../components/app_context.js";
import branchService from "../services/branches.js";
import shortcutService from "../services/shortcuts.js";

export default class NoteTitleWidget extends NoteContextAwareWidget {

    private $noteTitle!: JQuery<HTMLElement>;
    private deleteNoteOnEscape: boolean;

    constructor() {
        super();

        this.deleteNoteOnEscape = false;
    }

    doRender() {
        this.$widget = $(TPL);
        this.$noteTitle = this.$widget.find(".note-title");
        this.$noteTitle.on("blur", () => {
            
        });

    }

    async beforeNoteSwitchEvent({ noteContext }: EventData<"beforeNoteSwitch">) {
        if (this.isNoteContext(noteContext.ntxId)) {
            await this.spacedUpdate.updateNowIfNecessary();
        }
    }

    async beforeNoteContextRemoveEvent({ ntxIds }: EventData<"beforeNoteContextRemove">) {
        if (this.isNoteContext(ntxIds)) {
            await this.spacedUpdate.updateNowIfNecessary();
        }
    }

}
